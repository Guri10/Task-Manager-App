{"ast":null,"code":"var _jsxFileName = \"/Users/atharvagurav/Documents/Task-Manager-App/frontend/src/components/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createTask, updateTask } from \"../api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  task,\n  isEditing\n}) => {\n  _s();\n  const [title, setTitle] = useState(task ? task.title : \"\");\n  const [description, setDescription] = useState(task ? task.description : \"\");\n  const [priority, setPriority] = useState(task ? task.priority : \"Medium\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const taskData = {\n      title,\n      description,\n      priority,\n      status: \"Pending\"\n    };\n    if (isEditing) {\n      await updateTask(task.id, taskData);\n    } else {\n      await createTask(taskData);\n    }\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isEditing ? \"Edit Task\" : \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Task Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Task Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: priority,\n      onChange: e => setPriority(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Low\",\n        children: \"Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Medium\",\n        children: \"Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"High\",\n        children: \"High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: isEditing ? \"Update Task\" : \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskForm, \"ySTVVmm2w3EJZJeMx+2EeJY7XPg=\", false, function () {\n  return [useNavigate];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","createTask","updateTask","useNavigate","jsxDEV","_jsxDEV","TaskForm","task","isEditing","_s","title","setTitle","description","setDescription","priority","setPriority","navigate","handleSubmit","e","preventDefault","taskData","status","id","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/atharvagurav/Documents/Task-Manager-App/frontend/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createTask, updateTask } from \"../api\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst TaskForm = ({ task, isEditing }) => {\n    const [title, setTitle] = useState(task ? task.title : \"\");\n    const [description, setDescription] = useState(task ? task.description : \"\");\n    const [priority, setPriority] = useState(task ? task.priority : \"Medium\");\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const taskData = { title, description, priority, status: \"Pending\" };\n\n        if (isEditing) {\n            await updateTask(task.id, taskData);\n        } else {\n            await createTask(taskData);\n        }\n\n        navigate(\"/\");\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>{isEditing ? \"Edit Task\" : \"Create Task\"}</h2>\n            <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Task Title\" required />\n            <textarea value={description} onChange={(e) => setDescription(e.target.value)} placeholder=\"Task Description\"></textarea>\n            <select value={priority} onChange={(e) => setPriority(e.target.value)}>\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n            </select>\n            <button type=\"submit\">{isEditing ? \"Update Task\" : \"Add Task\"}</button>\n        </form>\n    );\n};\n\nexport default TaskForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}